{"ast":null,"code":"import * as Yup from 'yup';\nimport countries from '../countries.json';\nexport const MERCHANT_NAME = 'merchant_name';\nexport const MERCHANT_PHONE_NUMBER = 'merchant_phone_number';\nexport const SECTOR = 'sector';\nexport const MERCHANT_CITY = 'merchant_city';\nexport const COUNTRY = 'country';\nexport const MERCHANT_ID = 'merchant_id';\nexport const MERCHANT_EMAIL = 'merchant_email';\nexport const MERCHANT_URL = 'merchant_url';\nexport const CITY_CODE = 'city_code';\nexport const CURRENCY = 'currency';\nexport const STATE = 'state';\nexport const sectors = ['Education', 'Finance', 'Agric'];\nexport const countriesList = countries.map(country => country.name);\nexport default Yup.object({\n  [MERCHANT_NAME]: Yup.string().required().min(1),\n  [MERCHANT_PHONE_NUMBER]: Yup.number().required(),\n  [SECTOR]: Yup.string().required('Please select a sector').oneOf(sectors),\n  [MERCHANT_CITY]: Yup.string().required('Please select a city'),\n  [COUNTRY]: Yup.string().required().oneOf(countriesList),\n  [MERCHANT_ID]: Yup.string().required(),\n  [MERCHANT_EMAIL]: Yup.string().required().email(),\n  [MERCHANT_URL]: Yup.string().required(),\n  [CITY_CODE]: Yup.string().required(),\n  [CURRENCY]: Yup.string().required(),\n  [STATE]: Yup.string().required()\n});","map":{"version":3,"names":["Yup","countries","MERCHANT_NAME","MERCHANT_PHONE_NUMBER","SECTOR","MERCHANT_CITY","COUNTRY","MERCHANT_ID","MERCHANT_EMAIL","MERCHANT_URL","CITY_CODE","CURRENCY","STATE","sectors","countriesList","map","country","name","object","string","required","min","number","oneOf","email"],"sources":["/Users/dukkaayo/workspace/Dexter/dexter/src/utils/validators/create-new-merchant-form-validator.js"],"sourcesContent":["import * as Yup from 'yup'\n\nimport countries from '../countries.json'\n\nexport const MERCHANT_NAME = 'merchant_name'\n\nexport const MERCHANT_PHONE_NUMBER = 'merchant_phone_number'\n\nexport const SECTOR = 'sector'\n\nexport const MERCHANT_CITY = 'merchant_city'\n\nexport const COUNTRY = 'country'\n\nexport const MERCHANT_ID = 'merchant_id'\n\nexport const MERCHANT_EMAIL = 'merchant_email'\n\nexport const MERCHANT_URL = 'merchant_url'\n\nexport const CITY_CODE = 'city_code'\n\nexport const CURRENCY = 'currency'\n\nexport const STATE = 'state'\n\nexport const sectors = ['Education', 'Finance', 'Agric']\n\nexport const countriesList = countries.map(country => country.name)\n\nexport default Yup.object({\n  [MERCHANT_NAME]: Yup.string()\n    .required()\n    .min(1),\n  [MERCHANT_PHONE_NUMBER]: Yup.number().required(),\n  [SECTOR]: Yup.string()\n    .required('Please select a sector')\n    .oneOf(sectors),\n  [MERCHANT_CITY]: Yup.string().required('Please select a city'),\n  [COUNTRY]: Yup.string()\n    .required()\n    .oneOf(countriesList),\n  [MERCHANT_ID]: Yup.string().required(),\n  [MERCHANT_EMAIL]: Yup.string()\n    .required()\n    .email(),\n  [MERCHANT_URL]: Yup.string().required(),\n  [CITY_CODE]: Yup.string().required(),\n  [CURRENCY]: Yup.string().required(),\n  [STATE]: Yup.string().required()\n})\n"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,OAAzB,CAAhB;AAEP,OAAO,MAAMC,aAAa,GAAGb,SAAS,CAACc,GAAV,CAAcC,OAAO,IAAIA,OAAO,CAACC,IAAjC,CAAtB;AAEP,eAAejB,GAAG,CAACkB,MAAJ,CAAW;EACxB,CAAChB,aAAD,GAAiBF,GAAG,CAACmB,MAAJ,GACdC,QADc,GAEdC,GAFc,CAEV,CAFU,CADO;EAIxB,CAAClB,qBAAD,GAAyBH,GAAG,CAACsB,MAAJ,GAAaF,QAAb,EAJD;EAKxB,CAAChB,MAAD,GAAUJ,GAAG,CAACmB,MAAJ,GACPC,QADO,CACE,wBADF,EAEPG,KAFO,CAEDV,OAFC,CALc;EAQxB,CAACR,aAAD,GAAiBL,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CARO;EASxB,CAACd,OAAD,GAAWN,GAAG,CAACmB,MAAJ,GACRC,QADQ,GAERG,KAFQ,CAEFT,aAFE,CATa;EAYxB,CAACP,WAAD,GAAeP,GAAG,CAACmB,MAAJ,GAAaC,QAAb,EAZS;EAaxB,CAACZ,cAAD,GAAkBR,GAAG,CAACmB,MAAJ,GACfC,QADe,GAEfI,KAFe,EAbM;EAgBxB,CAACf,YAAD,GAAgBT,GAAG,CAACmB,MAAJ,GAAaC,QAAb,EAhBQ;EAiBxB,CAACV,SAAD,GAAaV,GAAG,CAACmB,MAAJ,GAAaC,QAAb,EAjBW;EAkBxB,CAACT,QAAD,GAAYX,GAAG,CAACmB,MAAJ,GAAaC,QAAb,EAlBY;EAmBxB,CAACR,KAAD,GAASZ,GAAG,CAACmB,MAAJ,GAAaC,QAAb;AAnBe,CAAX,CAAf"},"metadata":{},"sourceType":"module"}